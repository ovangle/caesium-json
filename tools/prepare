#! /usr/bin/env python3

import re
import os
import shutil

DIST_DIR = os.path.join('.', 'dist')
DISTSRC_DIR = os.path.join(DIST_DIR, 'src')

ignore_src_maps = shutil.ignore_patterns('*.js.map');

def copy_dist_src_to_project_root():
    """
    Copy the dist/src directory to the project root, ignoring source maps
    """
    src_maps = ignore_src_maps(DISTSRC_DIR, os.listdir(DISTSRC_DIR))
    for fname in os.listdir(DISTSRC_DIR):
        path = os.path.join(DISTSRC_DIR, fname)
        if fname in src_maps:
            continue
        elif os.path.isdir(path):
            shutil.copytree(path, os.path.join('.', fname), ignore=ignore_src_maps)
        else:
            shutil.copyfile(path, os.path.join('.', fname))

def backup_node_modules():
    """
    We move the node_modules folder to _node_modules, becuase the presence of the folder interferes with
    typescript's type resolution when the folder is symlinked into another project as an npm linked dependency.

    Remove this when we publish the module to npm properly
    """
    if os.path.isdir('./node_modules'):
        shutil.move('./node_modules', './_node_modules');

if __name__ == '__main__':
    backup_node_modules()
    copy_dist_src_to_project_root()


